// https://cloud.tencent.com/developer/article/1764387
单一职责原则
里氏替换原则
依赖倒置原则
接口隔离原则
迪米特原则
开闭原则

1. 单一职责原则（类和方法，接口）
一个类只有一个职责

2. 里氏替换原则（子类和父类的关系）
子类可以拓展父类的功能，但不能修改父类的功能
父类出现的地方，替换为子类不可以出现问题

想要最大化继承的优点

3. 依赖倒置原则（依赖抽象接口）
高层模块不应该依赖底层模块，二者都应该依赖于抽象
细节应该依赖于抽象，抽象不应该依赖于细节

抽象指的是接口或抽象类，细节指的是实现类。因为抽象更为稳定，细节是多变的。核心思想是面向接口编程而不是面向实现编程

那么我们在项目中怎么使用这个规则呢？可以从以下几个方面入手：
每个类尽量都要有接口或抽象类；
变量的表面类型尽量是接口或者抽象类；
任何类都不应该从具体类派生；

4. 接口隔离原则（接口按照功能细分）
将臃肿的接口拆分成小而精的接口

5. 迪米特原则（类与类之间的亲疏关系）
一个类应该对需要修改或调用的类知道的越少越好
什么是朋友类
https://cloud.tencent.com/developer/article/1764387
目的是低耦合

6. 开闭原则 （扩展开放，修改关闭）
对拓展开放，对修改封闭

